<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resources on Converge</title>
    <link>http://converge.aster.is/resources/</link>
    <description>Recent content in Resources on Converge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Sep 2016 09:00:07 -0500</lastBuildDate>
    <atom:link href="http://converge.aster.is/resources/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>user.user</title>
      <link>http://converge.aster.is/resources/user-user/</link>
      <pubDate>Mon, 26 Sep 2016 09:00:07 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/user-user/</guid>
      <description>

&lt;p&gt;User renders user data&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# create a user, only works on linux
user.user &amp;quot;user&amp;quot; {
  username = &amp;quot;test&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Username is the user login name.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uid&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UID is the user ID.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;groupname&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Groupname is the primary group for user and must already exist.
Only one of GID or Groupname may be indicated.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gid&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gid is the primary group ID for user and must refer to an existing group.
Only one of GID or Groupname may be indicated.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Name is the user description.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;home_dir&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HomeDir is the user&amp;rsquo;s login directory. By default,  the login
name is appended to the home directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;state&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;State is whether the user should be present.
Options are present and absent; default is present.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>user.group</title>
      <link>http://converge.aster.is/resources/user-group/</link>
      <pubDate>Wed, 21 Sep 2016 14:04:24 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/user-group/</guid>
      <description>

&lt;p&gt;Group renders group data&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# create a group, only works on linux
user.group &amp;quot;group&amp;quot; {
  name = &amp;quot;test&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gid&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gid is the group gid.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Name is the group name.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;state&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;State is whether the group should be present.
Options are present and absent; default is present.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>task</title>
      <link>http://converge.aster.is/resources/task/</link>
      <pubDate>Tue, 20 Sep 2016 14:45:56 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/task/</guid>
      <description>

&lt;p&gt;Task allows you to run arbitrary shell commands on your system, first
checking if the command should be run.&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;param &amp;quot;message&amp;quot; {
  default = &amp;quot;Hello, World!&amp;quot;
}

param &amp;quot;filename&amp;quot; {
  default = &amp;quot;test.txt&amp;quot;
}

task &amp;quot;render&amp;quot; {
  check = &amp;quot;cat {{param `filename`}} | tee /dev/stderr | grep -q &#39;{{param `message`}}&#39;&amp;quot;
  apply = &amp;quot;echo &#39;{{param `message`}}&#39; &amp;gt; {{param `filename`}}&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;interpreter&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the shell interpreter that will be used for your scripts. &lt;code&gt;/bin/sh&lt;/code&gt; is
used by default.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;check_flags&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;flags to pass to the &lt;code&gt;interpreter&lt;/code&gt; binary to check validity. For
&lt;code&gt;/bin/sh&lt;/code&gt; this is &lt;code&gt;-n&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exec_flags&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;flags to pass to the interpreter at execution time&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;check&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the script to run to check if a resource needs to be changed. It should
exit with exit code 0 if the resource does not need to be changed, and
1 (or above) otherwise.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the script to run to apply the resource. Normal shell exit code
expectations apply (that is, exit code 0 for success, 1 or above for
failure.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; (duration string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the amount of time the command will wait before halting forcefully. The
format is Go&amp;rsquo;s duration string. A duration string is a possibly signed
sequence of decimal numbers, each with optional fraction and a unit
suffix, such as &amp;ldquo;300ms&amp;rdquo;, &amp;ldquo;-1.5h&amp;rdquo; or &amp;ldquo;2h45m&amp;rdquo;. Valid time units are &amp;ldquo;ns&amp;rdquo;,
&amp;ldquo;us&amp;rdquo; (or &amp;ldquo;µs&amp;rdquo;), &amp;ldquo;ms&amp;rdquo;, &amp;ldquo;s&amp;rdquo;, &amp;ldquo;m&amp;rdquo;, &amp;ldquo;h&amp;rdquo;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dir&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the working directory this command should be run in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;env&lt;/code&gt; (map of string to string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;any environment variables that should be passed to the command&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker.container</title>
      <link>http://converge.aster.is/resources/docker-container/</link>
      <pubDate>Tue, 20 Sep 2016 14:45:55 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/docker-container/</guid>
      <description>

&lt;p&gt;Container is responsible for creating docker containers. It assumes that
there is already a Docker daemon running on the system.&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;docker.container &amp;quot;nginx&amp;quot; {
  name  = &amp;quot;nginx&amp;quot;
  image = &amp;quot;nginx:1.10-alpine&amp;quot;
  force = &amp;quot;true&amp;quot;

  ports = [
    &amp;quot;80&amp;quot;,
  ]

  env {
    &amp;quot;FOO&amp;quot; = &amp;quot;BAR&amp;quot;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;name of the container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;image&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the image name or ID to use for the container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;entrypoint&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;override the container entrypoint&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;override the container command&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;working_dir&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;override the working directory of the container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;env&lt;/code&gt; (map of string to string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;set environmnet variables in the container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expose&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;additional ports to expose in the container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;links&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A list of links for the container. Each link entry should be in the form of
container_name:alias&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ports&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;publish container ports to the host. Each item should be in the following
format:
ip:hostPort:containerPort|ip::containerPort|hostPort:containerPort|containerPort.
Ports can be specified in the format: portnum/proto. If proto is not
specified, &amp;ldquo;tcp&amp;rdquo; is assumed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dns&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;list of DNS servers for the container to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;volumes&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bind mounts volumes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;volumes_from&lt;/code&gt; (list of strings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mounts all volumes from the specified container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;publish_all_ports&lt;/code&gt; (bool)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;allocates a random host port for all of a container’s exposed ports.
Specified as a boolean value&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the desired status of the container. running|created&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;force&lt;/code&gt; (bool)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;indicates whether or not the container will be recreated if the state is
not what is expected. By default, the module will only check to see if the
container exists. Specified as a boolean value&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>param</title>
      <link>http://converge.aster.is/resources/param/</link>
      <pubDate>Tue, 20 Sep 2016 14:45:55 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/param/</guid>
      <description>

&lt;p&gt;Param controls the flow of values through &lt;code&gt;module&lt;/code&gt; calls. You can use the
&lt;code&gt;{{param &amp;quot;name&amp;quot;}}&lt;/code&gt; template call anywhere you need the value of a param
inside the current module.&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;param &amp;quot;message&amp;quot; {
  default = &amp;quot;Hello, World!&amp;quot;
}

param &amp;quot;filename&amp;quot; {
  default = &amp;quot;test.txt&amp;quot;
}

task &amp;quot;render&amp;quot; {
  check = &amp;quot;cat {{param `filename`}} | tee /dev/stderr | grep -q &#39;{{param `message`}}&#39;&amp;quot;
  apply = &amp;quot;echo &#39;{{param `message`}}&#39; &amp;gt; {{param `filename`}}&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; (anything scalar)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Default is an optional field that provides a default value if none is
provided to this parameter. If this field is not set, this param will be
treated as required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>file.directory</title>
      <link>http://converge.aster.is/resources/file-directory/</link>
      <pubDate>Tue, 13 Sep 2016 11:04:59 -0500</pubDate>
      
      <guid>http://converge.aster.is/resources/file-directory/</guid>
      <description>

&lt;p&gt;Directory makes sure a directory is present on disk&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# file.directory will create or ensure a directory is present
file.directory &amp;quot;hello&amp;quot; {
  destination = &amp;quot;hello&amp;quot;
}

# it can also accept a &amp;quot;create_all&amp;quot; parameter to do the equivalent of &amp;quot;mkdir -p&amp;quot;
file.directory &amp;quot;deeper&amp;quot; {
  destination = &amp;quot;deeper/a/b/c&amp;quot;
  create_all  = true
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;destination&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the location on disk to make the directory&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;create_all&lt;/code&gt; (bool)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;whether or not to create all parent directories on the way up&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>task.query</title>
      <link>http://converge.aster.is/resources/task-query/</link>
      <pubDate>Thu, 08 Sep 2016 23:26:25 -0700</pubDate>
      
      <guid>http://converge.aster.is/resources/task-query/</guid>
      <description>

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;task.query &amp;quot;hostname&amp;quot; {
  query = &amp;quot;hostname&amp;quot;
}

file.content &amp;quot;hostname data&amp;quot; {
  destination = &amp;quot;hostname.txt&amp;quot;
  content     = &amp;quot;{{lookup `task.query.hostname.status.stdout`}}&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;interpreter&lt;/code&gt; (string)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;query&lt;/code&gt; (string)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;check_flags&lt;/code&gt; (list of strings)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;exec_flags&lt;/code&gt; (list of strings)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; (duration string)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;dir&lt;/code&gt; (string)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;env&lt;/code&gt; (map of string to string)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>docker.image</title>
      <link>http://converge.aster.is/resources/docker-image/</link>
      <pubDate>Thu, 08 Sep 2016 23:18:03 -0700</pubDate>
      
      <guid>http://converge.aster.is/resources/docker-image/</guid>
      <description>

&lt;p&gt;Image is responsible for pulling Docker images. It assumes that there is
already a Docker daemon running on the system.&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;docker.image &amp;quot;busybox&amp;quot; {
  name               = &amp;quot;busybox&amp;quot;
  tag                = &amp;quot;latest&amp;quot;
  inactivity_timeout = &amp;quot;60s&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;name of the image to pull&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tag&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tag of the image to pull&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inactivity_timeout&lt;/code&gt; (duration_string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the amount of time to wait after a period of inactivity. The timeout is
reset each time new data arrives. The format is Go&amp;rsquo;s duration string. A
duration string is a possibly signed sequence of decimal numbers, each with
optional fraction and a unit suffix, such as &amp;ldquo;300ms&amp;rdquo;, &amp;ldquo;-1.5h&amp;rdquo; or &amp;ldquo;2h45m&amp;rdquo;.
Valid time units are &amp;ldquo;ns&amp;rdquo;, &amp;ldquo;us&amp;rdquo; (or &amp;ldquo;µs&amp;rdquo;), &amp;ldquo;ms&amp;rdquo;, &amp;ldquo;s&amp;rdquo;, &amp;ldquo;m&amp;rdquo;, &amp;ldquo;h&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>module</title>
      <link>http://converge.aster.is/resources/module/</link>
      <pubDate>Thu, 08 Sep 2016 23:18:03 -0700</pubDate>
      
      <guid>http://converge.aster.is/resources/module/</guid>
      <description>

&lt;p&gt;Module remotely sources other modules and adds them to the tree&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;param &amp;quot;message&amp;quot; {
  default = &amp;quot;Hello from another module!&amp;quot;
}

module &amp;quot;basic.hcl&amp;quot; &amp;quot;basic&amp;quot; {
  params = {
    message = &amp;quot;{{param `message`}}&amp;quot;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt; (map of string to anything)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Params is a map of strings to anything you&amp;rsquo;d like. It will be passed to
the called module as the default values for the &lt;code&gt;param&lt;/code&gt;s there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>file.content</title>
      <link>http://converge.aster.is/resources/file-content/</link>
      <pubDate>Thu, 08 Sep 2016 23:18:02 -0700</pubDate>
      
      <guid>http://converge.aster.is/resources/file-content/</guid>
      <description>

&lt;p&gt;Content renders content to disk&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;param &amp;quot;message&amp;quot; {
  default = &amp;quot;Hello, World in {{param `filename`}}&amp;quot;
}

param &amp;quot;filename&amp;quot; {
  default = &amp;quot;test.txt&amp;quot;
}

file.content &amp;quot;render&amp;quot; {
  destination = &amp;quot;{{param `filename`}}&amp;quot;
  content     = &amp;quot;{{param `message`}}&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;content&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Content is the file content. This will be rendered as a template.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;destination&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Destination is the location on disk where the content will be rendered.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>file.mode</title>
      <link>http://converge.aster.is/resources/file-mode/</link>
      <pubDate>Thu, 08 Sep 2016 23:18:02 -0700</pubDate>
      
      <guid>http://converge.aster.is/resources/file-mode/</guid>
      <description>

&lt;p&gt;Mode monitors the mode of a file&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;param &amp;quot;filename&amp;quot; {
  default = &amp;quot;test.txt&amp;quot;
}

file.mode &amp;quot;render&amp;quot; {
  destination = &amp;quot;{{param `filename`}}&amp;quot;
  mode        = 0777
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;destination&lt;/code&gt; (string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Destination specifies which file will be modified by this resource. The
file must exist on the system (for example, having been created with
&lt;code&gt;file.content&lt;/code&gt;.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt; (octal string)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mode is the mode of the file, specified in octal.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>